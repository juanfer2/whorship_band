package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.32

import (
	"context"

	songs_application "github.com/juanfer2/whorship_band/src/songs/application"
	songs_domain "github.com/juanfer2/whorship_band/src/songs/domain"
	songs_repositories "github.com/juanfer2/whorship_band/src/songs/infrastructure/repositories"
)

// Song is the resolver for the song field.
func (r *queryResolver) Songs(ctx context.Context) ([]*songs_domain.Song, error) {
	var songUseCase = songs_application.NewSongUseCase(songs_repositories.NewSongPGRepository())
	var songs []*songs_domain.Song

	for _, song := range songUseCase.GetAll() {
		songs = append(songs, &song)
	}

	return songs, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
